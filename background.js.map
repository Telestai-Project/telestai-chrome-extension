{"mappings":"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","sources":["popup.js","elvis.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst asdf = require(\"./elvis\");\r\n\r\nconst Routes = {\r\n  SIGN: \"SIGN\",\r\n  SET_WIF: \"SET_WIF\",\r\n};\r\nfunction App() {\r\n  const [route, setRoute] = React.useState(Routes.SIGN);\r\n\r\n  const CurrentView = () => {\r\n    if (route === Routes.SIGN) {\r\n      return <Sign />;\r\n    } else if (route === Routes.SET_WIF) {\r\n      return <SetWIF />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-lg\">Ravencoin sign in</h1>\r\n      <label\r\n        htmlFor=\"advanced\"\r\n        className=\"flex relative items-center mb-4 cursor-pointer\"\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"advanced\"\r\n          className=\"sr-only\"\r\n          onChange={(e) => {\r\n            if (e.currentTarget.checked) {\r\n              setRoute(Routes.SET_WIF);\r\n            } else {\r\n              setRoute(Routes.SIGN);\r\n            }\r\n          }}\r\n        />\r\n        <div className=\"w-11 h-6 bg-gray-200 rounded-full border border-gray-200 toggle-bg dark:bg-gray-700 dark:border-gray-600\"></div>\r\n        <span className=\"ml-3 text-sm font-medium text-gray-900 dark:text-gray-300\">\r\n          Advanced\r\n        </span>\r\n      </label>\r\n      <CurrentView />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Sign() {\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [signature, setSignature] = React.useState(\"\");\r\n  const [wif, setWIF] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    chrome.storage.sync.get(\"privateKeyWIF\", ({ privateKeyWIF }) => {\r\n      const address = asdf.getAddress(privateKeyWIF);\r\n      setWIF(privateKeyWIF);\r\n      setAddress(address);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div className=\"mb-6\">\r\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\r\n            Address\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"address\"\r\n            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n            placeholder=\"\"\r\n            disabled\r\n            value={address}\r\n          />\r\n\r\n          <a\r\n            target=\"_blank\"\r\n            href={`https://api.ravencoin.org/address/${address}`}\r\n          >\r\n            Explore tokens\r\n          </a>\r\n        </div>\r\n\r\n        {/* MESSAGE */}\r\n        <div className=\"mb-6\">\r\n          <label\r\n            htmlFor=\"message\"\r\n            className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\"\r\n          >\r\n            Your message\r\n          </label>\r\n\r\n          <textarea\r\n            onChange={(event) => {\r\n              const m = event.target.value;\r\n              setMessage(m);\r\n            }}\r\n            id=\"message\"\r\n            rows=\"4\"\r\n            value={message}\r\n            className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        {/* SIGNATURE */}\r\n        <div className=\"mb-6\">\r\n          <label>Signature</label>\r\n          <textarea\r\n            value={signature}\r\n            id=\"signature\"\r\n            className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        {/* SIGN BUTTON */}\r\n        <div className=\"mb-6\">\r\n          <button\r\n            onClick={() => {\r\n              const signature = asdf\r\n                .signMessage(wif, message)\r\n                .toString(\"base64\");\r\n              setSignature(signature);\r\n            }}\r\n            type=\"button\"\r\n            id=\"signButton\"\r\n            className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n          >\r\n            Sign\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nfunction SetWIF() {\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [wif, setWIF] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    chrome.storage.sync.get(\"privateKeyWIF\", ({ privateKeyWIF }) => {\r\n      const address = asdf.getAddress(privateKeyWIF);\r\n      setAddress(address);\r\n      setWIF(privateKeyWIF);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-6\">\r\n        <label\r\n          htmlFor=\"privateKeyWIF\"\r\n          className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\r\n        >\r\n          Private key in Wallet Import Format\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"privateKeyWIF\"\r\n          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n          placeholder=\"\"\r\n          required\r\n          onChange={(event) => {\r\n            const value = event.target.value;\r\n            setWIF(value);\r\n          }}\r\n          value={wif}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        onClick={() => {\r\n          chrome.storage.sync.set({ privateKeyWIF: wif });\r\n        }}\r\n        type=\"button\"\r\n        id=\"saveButton\"\r\n        className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\r\n      >\r\n        Save\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nReactDOM.render(<App />, document.getElementById(\"app\"));\r\n","const bitcoinMessage = require(\"bitcoinjs-message\");\r\n\r\nconst CoinKey = require(\"coinkey\");\r\nconst coininfo = require(\"coininfo\"); //coininfo gives us meta data about a bunch of crypto currencies, including Ravencoin\r\n\r\nconst frmt = coininfo.ravencoin.main.toBitcoinJS();\r\nconst RAVENCOIN_NETWORK = {\r\n  messagePrefix: \"\\x16Raven Signed Message:\\n\",\r\n  bip32: {\r\n    public: frmt.bip32.public,\r\n    private: frmt.bip32.private,\r\n  },\r\n  pubKeyHash: frmt.pubKeyHash,\r\n  scriptHash: frmt.scriptHash,\r\n  wif: frmt.wif,\r\n};\r\n\r\nfunction getAddress(privateKeyWIF) {\r\n  const coinkey = CoinKey.fromWif(privateKeyWIF);\r\n  coinkey.versions = coininfo(\"RVN\").versions;\r\n\r\n  return coinkey.publicAddress;\r\n}\r\nfunction signMessage(privateKeyWIF, message) {\r\n  //Import private key as WIF and set coinkey to use MAIN-net for Ravencoin\r\n  const coinkey = CoinKey.fromWif(privateKeyWIF);\r\n  coinkey.versions = coininfo(\"RVN\").versions;\r\n\r\n  const privateKey = coinkey.privateKey;\r\n  /*\r\n  export function sign(\r\n    message: string | Buffer,\r\n    privateKey: Buffer | Signer,\r\n    compressed?: boolean,\r\n    messagePrefix?: string,\r\n    sigOptions?: SignatureOptions\r\n    ): Buffer;\r\n    */\r\n  var signature = bitcoinMessage.sign(\r\n    message,\r\n    privateKey,\r\n    coinkey.compressed,\r\n    RAVENCOIN_NETWORK.messagePrefix\r\n  );\r\n\r\n  return signature;\r\n}\r\n\r\nmodule.exports = {\r\n  signMessage,\r\n  getAddress,\r\n};\r\n"],"names":[],"version":3,"file":"background.js.map"}